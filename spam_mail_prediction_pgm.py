# -*- coding: utf-8 -*-
"""Spam Mail Prediction Pgm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eEjTcgLiJRLOJdBxvj5JP-6eBAEaTRFw
"""

import numpy as np
import pandas as pd
from sklearn import *
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.svm import LinearSVC
from sklearn.metrics import accuracy_score
import warnings
warnings.filterwarnings('ignore')

raw_data=pd.read_csv('spamham.csv',encoding='latin-1')
raw_data=raw_data.where((pd.notnull(raw_data)),'')

mail_data1=raw_data[['Category','Message']]

mail_data1.head()

m={"ham":1,"spam":0}
mail_data1["Category"]=mail_data1["Category"].map(m)
mail_data1.head()

X=mail_data1['Message']
y=mail_data1['Category']

print(X)
print('..........')
print(y)

#transform the text data to feature vectors that can be used as input to the svm model using TfidfVectorizer
#convert the text to lowercase letters

feature_extraction=TfidfVectorizer(min_df=1,stop_words='english',lowercase='True')
X=feature_extraction.fit_transform(X)

X_train,X_test,y_train,y_test=train_test_split(X,y,train_size=0.8,test_size=0.2,random_state=100)

#convert y_train and y_test values to integers
y_train=y_train.astype('int')
y_test=y_test.astype('int')

model=LinearSVC()
model.fit(X_train,y_train)

Predicted_y_train=model.predict(X_train)
accuracy=accuracy_score(y_train,Predicted_y_train)

print(accuracy)

predicted_y_test=model.predict(X_test)
accuracy1=accuracy_score(y_test,predicted_y_test)
print(accuracy1)

input_mail = ["I'm gonna be home soon and i don't want to talk about this stuff anymore tonight, k? I've cried enough today."]
# convert text to feature vectors
input_mail_features = feature_extraction.transform(input_mail)

#making prediction
prediction = model.predict(input_mail_features)
print(prediction)

if(prediction[0] == 1):
  print('HAM MAIL')
else:
  print('SPAM MAIL')